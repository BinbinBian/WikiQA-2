# need to know CDF of number of sentences/question
# combination of 3 gives 0.9976392823418319
# 2: 0.9881964117091595
# so 2 is more probably enough
cdf = [0.027266754270696452, 0.08114323258869909, 0.14816031537450725, 0.23028909329829172, 0.30946123521682, 0.3827201051248358, 0.4563074901445467, 0.5246386333771353, 0.5788436268068331, 0.6300919842312747, 0.6790407358738502, 0.7230617608409986, 0.7608409986859395, 0.7966491458607095, 0.8262155059132719, 0.8531537450722732, 0.8817345597897501, 0.9011169513797632, 0.912614980289093, 0.9329829172141916, 0.9467805519053873, 0.9549934296977658, 0.9664914586070956, 0.9737187910643886, 0.9753613666228643, 0.9789750328515109, 0.983902759526938, 0.9881734559789748, 0.9927726675427067, 0.9999999999999997]
import itertools
d = {0:(0)}

for n_answers in range(20,30):
	for combo in range(1,2):
		for i,x in enumerate(itertools.combinations(range(1,n_answers),combo), start=len(d)):
			d[i] = x
	# print d
	print(n_answers,len(d),0.9881964117091595*cdf[n_answers])

# (20, 20, 0.9356051440689214)
# (21, 40, 0.9437210804331556)
# (22, 61, 0.9550833913430835)
# (23, 83, 0.9622254153436096)
# (24, 106, 0.9638486026164566)
# (25, 130, 0.9674196146167195)
# (26, 155, 0.9722891764352601)
# (27, 181, 0.9765094633446619)
# (28, 208, 0.9810543877086331)
# (29, 236, 0.9881964117091592) so 29 it is